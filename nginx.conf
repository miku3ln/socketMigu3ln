server {
    listen 80;
    server_name localhost;

    # ================== BACKEND NODE (HTTP) ==================
    # Por qué: aquí enrutamos /socketMigu3ln/* hacia el servicio Node
    location /socketMigu3ln/ {
        proxy_http_version 1.1;

        # Quita el prefijo antes de reenviar a la app (tu app espera / y /audio)
        rewrite ^/socketMigu3ln/?(.*)$ /$1 break;

        # Cabeceras estándar de proxy
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Enviar al servicio Node por nombre de servicio Docker
        proxy_pass http://socketmigu3ln:3000/;
    }

    # ================== BACKEND NODE (WebSocket) ==================
    # Tu WS_PATH es /audio, por eso el endpoint externo será:
    #   ws://localhost:8081/socketMigu3ln/audio
    # Usamos 'location =' (match exacto) para el upgrade limpio.
    location = /socketMigu3ln/audio {
        proxy_http_version 1.1;

        # Upgrade WebSocket
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Cabeceras estándar
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts altos para sesiones largas
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;

        proxy_pass http://socketmigu3ln:3000/audio;
    }
    location /stt/ {
        client_max_body_size 20m;              # subir chunks cómodamente
        proxy_http_version 1.1;
        rewrite ^/stt/?(.*)$ /$1 break;        # quita el prefijo /stt/

        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://stt:8000/;           # nombre del servicio docker
    }
    # ================== SPA ESTÁTICA (OPCIONAL) ==================
    # Si montaste ./dist en /usr/share/nginx/html/socketmigu3ln,
    # podrás abrir http://localhost:8081/ para ver tu SPA
    location / {
        root /usr/share/nginx/html/socketmigu3ln;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    # Logs (útiles para debug)
    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;
}
